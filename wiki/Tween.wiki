#labels Actions
==Summary==
Perhaps the most used action is the Tween. A tween is an object that represents a change of a property from one value to another over time. However, in most cases, the word tween is more likely to be synonymous with an animation be-*tween* two key points. A tween object has a target object (usually a display object) whose properties are affected, a target property, a duration, a start value and an end value. Tweens also use a special type of function, called an [Easing easing function], to determine the interpolation from the start to the ending values.

==Syntax==
{{{
new Tween(target:Object, property:String, toValue:Number, fromValue:Number = Tween.EXISTING_FROM_VALUE, duration:* = 0, offset:* = 0, easingFunction:Function = null);
}}}
  * `target` - the object whose property will be changed.
  * `property` - the name of the property to change. The property must be a Number, int or uint such as a `Sprite` object's "alpha"
  * `toValue` - the value to tween the property to. After the tween is done, this will be the value of the property. (*Note:* The end value comes before the start value because the start value is optional)
  * `fromValue` - the starting value of the tween. By default, this is the value of the property before the tween.
  * `duration` - the time in frames that this tween will take to execute.
  * `offset` - the time to wait before starting the tween.
  * `easingFunction` - the function to use to interpolate the values between fromValue and toValue.

==Example==
This example creates a box then two tweens that move it to the right and down respectively.
{{{
package {
	import com.mimswright.easing.*;
	import com.mimswright.sync.*;
	import flash.display.*;
	
	public class TweenDemo extends Sprite {
		public function TweenDemo() {
			// set framerate to 30 frames per second
			stage.frameRate = 30;
			// start the Synchronizer. You'll only need to do this once.
			Synchronizer.initialize(this);
		
			// Draw a rectangle to use for demonstrations.
			var sprite:Sprite = new Sprite();
			sprite.graphics.beginFill(0);
			sprite.graphics.drawRect(0,0,20,20);
			addChild(sprite);
			
			// move the rectangle from left to right.
			var tweenX:Tween = new Tween(sprite, "x", 300, 0, "3sec", "0sec", Cubic.easeInOut);
			// apply the same animation to the y property.
			var tweenY:Tween = tweenX.cloneWithTarget(sprite, "y");
			
			tweenX.start();
			tweenY.start();
		}
	}
}
}}}

==Related Links==
  * [http://mimswright.com/kitchensync/docs/api/com/mimswright/sync/Tween.html API Reference]
  * [AbstractSynchronizedAction]
  * [Easing Easing Functions]